# 가정 1. /root 폴더가 /Users/thruthesky/www/docker 로 연결되어져 있다고 가정한다.

#user  nobody;
worker_processes  1;
error_log  logs/error.log debug;
events {
    worker_connections  256;
}
http {
    include       mime.types;
    default_type  application/octet-stream;

    # Host OS 의 /Users/thruthesky/www/docker/logs/nginx/access.log 에 기록된다.
    access_log  logs/access.log;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    client_max_body_size    500M;

    # All hosts except(localhost) sholud go to 443(https) port.
#    server {
#        server_name  .philov.com .itsuda50.com;
#        listen       80;
#        rewrite ^ https://$host$request_uri? permanent;
#    }

    server {
        listen       	80;
        server_name _;

        # Host OS 의 /Users/thruthesky/www/docker/home/default 폴더가 /root 폴더가 된다.
        root /docker/home/default;

        include /docker/etc/nginx/common.conf;
    }

    server {
        server_name localhost www_docker_nginx;
        listen 80;
        root /docker/home/centerx;
        include /docker/etc/nginx/common.conf;
    }

    server {
        server_name  .philov.com;
        listen       80;
        rewrite ^ https://$host$request_uri? permanent;
    }
    server {
    	listen		443 ssl;
        server_name .philov.com;

        # Host OS 의 /Users/thruthesky/www/docker/etc/ssl/philov.com 폴더에서 cert 파일을 찾는다.
        ssl_certificate /docker/etc/ssl/philov.com/cert-ca-bundle.crt;
        ssl_certificate_key /docker/etc/ssl/philov.com/private.key;

        #charset koi8-r;


        # Host OS 의 /Users/thruthesky/www/docker/home/sonub/ 폴더가 philov.com 도메인의 홈 폴더가 된다.
        root /docker/home/centerx;
        include /docker/etc/nginx/common.conf;
    }

    server {
        server_name  .sonub.com;
        listen       80;
        rewrite ^ https://$host$request_uri? permanent;
    }
    server {
    	listen		443 ssl;
        server_name .sonub.com;

        # Host OS 의 /Users/thruthesky/www/docker/etc/ssl/philov.com 폴더에서 cert 파일을 찾는다.
        ssl_certificate /docker/etc/ssl/sonub.com/sonub-wide-cert-ca-bundle.crt;
        ssl_certificate_key /docker/etc/ssl/sonub.com/sonub-wide-private.key;

        #charset koi8-r;

        root /docker/home/centerx;

        include /docker/etc/nginx/common.conf;
    }

    # itsdua project
    server {
        server_name  .itsuda50.com;
        listen       80;
        rewrite ^ https://$host$request_uri? permanent;
    }
	server {
        server_name .itsuda50.com;
        listen 443 ssl; # managed by Certbot
        ssl_certificate /docker/etc/ssl/itsuda50.com/itsuda50.com.cert; # managed by Certbot
        ssl_certificate_key /docker/etc/ssl/itsuda50.com/itsuda50.com.private.key; # managed by Certbot
        root /docker/home/itsuda/centerx;
        index index.php;
        location / {
            try_files $uri $uri/ /index.php?$args;
        }
        location ~ \.php$ {
            fastcgi_pass   php:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            add_header Access-Control-Allow-Origin *;
        }
    }

    # dating project
    server {
        server_name  dating.com;
        listen       80;
        root /docker/home/centerx;
        index index.php;
        location / {
            try_files $uri $uri/ /index.php?$args;
        }
        location ~ \.php$ {
            fastcgi_pass   php:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
    }

}
